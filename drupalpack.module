<?php
/**
 * Provide default hook implementations and other code for webpack
 * delivered assets.
 */

/**
 * The place where generated files will be written.
 */
define('DRUPALPACK_DIR', 'public://webpack');

/**
 * Implements hook_page_alter().
 *
 * This hook implementation serves as the merge point for all default (i.e. index.js)
 * scripts. Modules which define a file named index.js will have this file included
 * on all page loads by default.
 *
 * @param $page array
 *  A renderable array representing the current page.
 *
 */
function drupalpack_page_alter(&$page) {
  if(!is_dir('public://webpack')) {
    watchdog(
      'drupalpack',
      'Missing @w public files dir',
      array('@w' => 'Webpack'),
      WATCHDOG_WARNING
    );
    return;
  }

  $files = file_scan_directory(DRUPALPACK_DIR, '/.*\.js|,*\.css$/', array('recurse' => TRUE));
  foreach($files as $uri => $file) {
    $info = pathinfo($uri);
    if($info['basename'] === 'app.js') {
      $page['header']['#attached']['js'][] = array(
        'data' => file_create_url($uri),
        'scope' => 'footer',
        'weight' => -9999,
      );
    }
    if($info['basename'] === 'app.css') {
      $page['header']['#attached']['css'][] = array(
        'data' => $uri,
        'type' => 'file',
        'weight' => -9999,
      );
    }
  }
}

/**
 * Implements hook_preprocess().
 *
 * Preprocess all theme function to scan for CSS/JS files to include.
 *
 * @param $variables
 */
function drupalpack_preprocess(&$variables) {
  $scripts[$variables['theme_hook_original']] = array();
  $styles[$variables['theme_hook_original']] = array();
  $hooks = array_merge(
    array($variables['theme_hook_original']),
    $variables['theme_hook_suggestions']
  );
  foreach($hooks as $hook) {
    $filename = str_replace('_', '-', $hook);

    // Get component level JS
    $files = file_scan_directory(DRUPALPACK_DIR, "/$filename.js$/");
    foreach(array_keys($files) as $uri) {
      $scripts[$variables['theme_hook_original']][] = file_create_url($uri);
    }

    // Get component leval CSS
    $files = file_scan_directory(DRUPALPACK_DIR, "/$filename.css$/");
    foreach(array_keys($files) as $uri) {
      $styles[$variables['theme_hook_original']][] = $uri;
    }
  }

  foreach($scripts[$variables['theme_hook_original']] as $script) {
    drupal_add_js($script, array(
      'type' => 'file',
      'scope' => 'footer',
      'weight' => JS_LIBRARY,
    ));
  }

  foreach($styles[$variables['theme_hook_original']] as $style) {
    drupal_add_css($style, array(
      'type' => 'file',
      'scope' => CSS_THEME,
    ));
  }
}
